/* === MODERN UI RESET & BASE STYLES === */
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

:root {
  /* Color Variables */
  --primary: #6366f1;
  --primary-hover: #4f46e5;
  --success: #10b981;
  --danger: #ef4444;
  --warning: #f59e0b;
  --text-primary: #1e293b;
  --text-secondary: #64748b;
  --text-light: #f8fafc;
  --bg-light: #f1f5f9;
  --bg-white: #ffffff;
  --bg-card: #ffffff;
  --border-color: #e2e8f0;
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);

  /* Animation Variables */
  --transition-fast: 150ms;
  --transition-normal: 250ms;
  --transition-slow: 350ms;
  --easing: cubic-bezier(0.4, 0, 0.2, 1);
}

/* Dark Theme Colors */
.dark-mode {
  --primary: #818cf8;
  --primary-hover: #6366f1;
  --text-primary: #f1f5f9;
  --text-secondary: #cbd5e1;
  --bg-light: #1e293b;
  --bg-white: #0f172a;
  --bg-card: #1e293b;
  --border-color: #334155;
}

/* Ocean Theme Colors */
.theme-ocean {
  --primary: #38bdf8;
  --primary-hover: #0ea5e9;
  --text-primary: #f1f5f9;
  --text-secondary: #cbd5e1;
  --bg-light: #0c4a6e;
  --bg-white: #082f49;
  --bg-card: #0c4a6e;
  --border-color: #164e63;
}

/* Forest Theme Colors */
.theme-forest {
  --primary: #34d399;
  --primary-hover: #10b981;
  --text-primary: #f1f5f9;
  --text-secondary: #cbd5e1;
  --bg-light: #064e3b;
  --bg-white: #022c22;
  --bg-card: #064e3b;
  --border-color: #065f46;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Poppins', sans-serif;
  background-color: var(--bg-light);
  color: var(--text-primary);
  min-height: 100vh;
  line-height: 1.6;
  transition: background-color var(--transition-normal) var(--easing),
    color var(--transition-normal) var(--easing);
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 20px;
}

/* === LAYOUT & CONTAINER === */
.container {
  background: var(--bg-card);
  width: 100%;
  max-width: 480px;
  border-radius: 16px;
  box-shadow: var(--shadow-lg);
  overflow: hidden;
  margin: 80px auto 40px;
  transition: transform var(--transition-normal) var(--easing),
    background-color var(--transition-normal) var(--easing),
    box-shadow var(--transition-normal) var(--easing);
  animation: container-appear 0.5s var(--easing);
  position: relative;
}

.container:hover {
  transform: translateY(-5px);
  box-shadow: var(--shadow-lg), 0 20px 25px -5px rgba(0, 0, 0, 0.1);
}

/* Container Header */
.container-header {
  padding: 24px;
  text-align: center;
  border-bottom: 1px solid var(--border-color);
  position: relative;
}

.container-header h1 {
  margin: 0;
  font-size: 1.75rem;
  font-weight: 600;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
}

.container-header h1 svg {
  width: 28px;
  height: 28px;
  color: var(--primary);
}

/* Container Body */
.container-body {
  padding: 24px;
}

/* === FORM ELEMENTS === */
.input-group {
  position: relative;
  margin-bottom: 16px;
  width: 100%;
}

input,
select,
button {
  font-family: 'Poppins', sans-serif;
  font-size: 1rem;
}

input[type="text"],
input[type="email"],
input[type="password"],
input[type="date"],
select {
  width: 100%;
  padding: 12px 16px;
  border-radius: 8px;
  border: 1px solid var(--border-color);
  background-color: var(--bg-white);
  color: var(--text-primary);
  transition: all var(--transition-fast) var(--easing);
}

input:focus,
select:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.2);
}

.input-group .toggle-password {
  position: absolute;
  right: 16px;
  top: 50%;
  transform: translateY(-50%);
  color: var(--text-secondary);
  cursor: pointer;
  transition: color var(--transition-fast) var(--easing);
}

.input-group .toggle-password:hover {
  color: var(--primary);
}

.password-rules {
  font-size: 0.8rem;
  color: var(--text-secondary);
  margin-top: 6px;
  margin-bottom: 16px;
  line-height: 1.4;
}

/* === BUTTONS === */
button {
  background-color: var(--primary);
  color: white;
  border: none;
  border-radius: 8px;
  padding: 12px 20px;
  cursor: pointer;
  font-weight: 500;
  transition: all var(--transition-fast) var(--easing);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
}

button:hover {
  background-color: var(--primary-hover);
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

button:active {
  transform: translateY(0);
}

button svg {
  width: 18px;
  height: 18px;
}

.btn-outline {
  background-color: transparent;
  border: 1px solid var(--primary);
  color: var(--primary);
}

.btn-outline:hover {
  background-color: var(--primary);
  color: white;
}

.btn-danger {
  background-color: var(--danger);
}

.btn-danger:hover {
  background-color: #dc2626;
}

.btn-warning {
  background-color: var(--warning);
}

.btn-warning:hover {
  background-color: #d97706;
}

.btn-success {
  background-color: var(--success);
}

.btn-success:hover {
  background-color: #059669;
}

.btn-group {
  display: flex;
  gap: 10px;
  margin: 16px 0;
}

.btn-group button {
  flex: 1;
}

/* === TOP CONTROLS === */
.top-controls {
  position: absolute;
  top: 20px;
  right: 20px;
  display: flex;
  align-items: center;
  gap: 16px;
  z-index: 100;
}

/* Theme Switch */
.theme-switch {
  position: relative;
  width: 50px;
  height: 26px;
}

.theme-switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  transition: var(--transition-normal);
  border-radius: 34px;
}

.slider:before {
  position: absolute;
  content: "";
  height: 18px;
  width: 18px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  transition: var(--transition-normal);
  border-radius: 50%;
}

input:checked+.slider {
  background-color: var(--primary);
}

input:checked+.slider:before {
  transform: translateX(24px);
}

/* Theme Selector */
.theme-selector select {
  background-color: var(--bg-card);
  color: var(--text-primary);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  padding: 8px 12px;
  cursor: pointer;
  font-size: 0.9rem;
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%236366f1'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M19 9l-7 7-7-7'%3E%3C/path%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 12px center;
  background-size: 16px;
  padding-right: 36px;
}

/* === AUTH FORMS === */
.auth-form {
  background-color: var(--bg-card);
  padding: 24px;
  border-radius: 12px;
  margin-top: 20px;
  animation: form-appear 0.4s var(--easing);
}

.auth-form h2 {
  margin-bottom: 20px;
  text-align: center;
  font-weight: 600;
  color: var(--text-primary);
}

.auth-links {
  margin: 24px 0;
  display: flex;
  gap: 12px;
  justify-content: center;
}

.forgot-password {
  margin-top: 16px;
  text-align: center;
}

.forgot-password a {
  color: var(--primary);
  text-decoration: none;
  font-size: 0.9rem;
  transition: color var(--transition-fast) var(--easing);
}

.forgot-password a:hover {
  color: var(--primary-hover);
  text-decoration: underline;
}

/* === TASK SECTION === */
.task-input-group {
  display: flex;
  gap: 8px;
  margin-bottom: 16px;
}

.task-input-group input {
  flex: 1;
}

/* Filter Container */
.filter-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 16px;
  padding-bottom: 16px;
  border-bottom: 1px solid var(--border-color);
}

.filter-container label {
  font-size: 0.9rem;
  color: var(--text-secondary);
}

/* Task List */
.task-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

.task-item {
  background-color: var(--bg-white);
  border-radius: 8px;
  padding: 16px;
  margin-bottom: 12px;
  display: flex;
  align-items: center;
  gap: 12px;
  box-shadow: var(--shadow-sm);
  transition: all var(--transition-normal) var(--easing);
  animation: task-appear 0.3s var(--easing);
  position: relative;
  overflow: hidden;
}

.task-item:hover {
  box-shadow: var(--shadow-md);
  transform: translateY(-2px);
}

.task-checkbox {
  position: relative;
  min-width: 22px;
  height: 22px;
}

.task-checkbox input[type="checkbox"] {
  opacity: 0;
  position: absolute;
  width: 100%;
  height: 100%;
  cursor: pointer;
  z-index: 2;
}

.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  width: 22px;
  height: 22px;
  border: 2px solid var(--border-color);
  border-radius: 6px;
  transition: all var(--transition-fast) var(--easing);
}

.task-checkbox input[type="checkbox"]:checked+.checkmark {
  background-color: var(--success);
  border-color: var(--success);
}

.checkmark:after {
  content: "";
  position: absolute;
  display: none;
  top: 3px;
  left: 7px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

.task-checkbox input[type="checkbox"]:checked+.checkmark:after {
  display: block;
}

.task-content {
  flex: 1;
  transition: all var(--transition-normal) var(--easing);
}

.task-item.completed .task-content {
  color: var(--text-secondary);
  text-decoration: line-through;
}

.task-actions {
  display: flex;
  gap: 8px;
}

.task-actions button {
  padding: 6px;
  min-width: 32px;
  height: 32px;
  background-color: transparent;
  color: var(--text-secondary);
  border-radius: 6px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.task-actions button:hover {
  background-color: var(--bg-light);
  color: var(--text-primary);
  box-shadow: none;
}

.task-actions button.edit:hover {
  color: var(--warning);
}

.task-actions button.delete:hover {
  color: var(--danger);
}

.task-actions svg {
  width: 16px;
  height: 16px;
}

/* Empty State */
.empty-state {
  text-align: center;
  padding: 40px 20px;
  color: var(--text-secondary);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 16px;
  animation: fade-in 0.5s var(--easing);
}

.empty-state svg {
  width: 64px;
  height: 64px;
  opacity: 0.5;
}

/* === ANIMATIONS === */
@keyframes container-appear {
  from {
    opacity: 0;
    transform: translateY(30px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes form-appear {
  from {
    opacity: 0;
    transform: translateY(20px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes task-appear {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes slide-up {
  from {
    transform: translateY(10px);
    opacity: 0;
  }

  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes scale-in {
  from {
    transform: scale(0.95);
    opacity: 0;
  }

  to {
    transform: scale(1);
    opacity: 1;
  }
}

/* Task animations */
.task-item.deleting {
  animation: slide-out 0.3s var(--easing) forwards;
}

@keyframes slide-out {
  to {
    transform: translateX(100%);
    opacity: 0;
    margin-bottom: -60px;
    padding-top: 0;
    padding-bottom: 0;
    height: 0;
  }
}

/* Task completion animation */
.task-item.completing {
  animation: task-complete 0.5s var(--easing);
}

@keyframes task-complete {
  0% {
    background-color: var(--bg-white);
  }

  50% {
    background-color: rgba(16, 185, 129, 0.1);
  }

  100% {
    background-color: var(--bg-white);
  }
}

/* Notification */
.notification {
  position: fixed;
  top: 20px;
  right: 20px;
  background-color: var(--bg-card);
  color: var(--text-primary);
  padding: 12px 16px;
  border-radius: 8px;
  box-shadow: var(--shadow-lg);
  z-index: 1000;
  display: flex;
  align-items: center;
  gap: 12px;
  transform: translateX(120%);
  opacity: 0;
  animation: notification-appear 0.3s var(--easing) forwards,
    notification-disappear 0.3s var(--easing) forwards 2.7s;
}

.notification.success {
  border-left: 4px solid var(--success);
}

.notification.error {
  border-left: 4px solid var(--danger);
}

.notification svg {
  width: 20px;
  height: 20px;
}

.notification.success svg {
  color: var(--success);
}

.notification.error svg {
  color: var(--danger);
}

@keyframes notification-appear {
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes notification-disappear {
  to {
    transform: translateX(120%);
    opacity: 0;
  }
}

/* Progress Bar Animation */
.progress-bar {
  height: 4px;
  background-color: var(--primary);
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  animation: progress 3s var(--easing);
}

@keyframes progress {
  0% {
    width: 0;
  }

  100% {
    width: 100%;
  }
}

/* === MEDIA QUERIES === */
@media (max-width: 576px) {
  body {
    padding: 10px;
  }

  .container {
    margin-top: 60px;
    border-radius: 12px;
  }

  .container-header {
    padding: 20px 16px;
  }

  .container-body {
    padding: 16px;
  }

  .btn-group {
    flex-direction: column;
  }

  .top-controls {
    top: 15px;
    right: 15px;
    gap: 10px;
  }

  input[type="text"],
  input[type="email"],
  input[type="password"],
  button {
    padding: 10px 14px;
  }

  .task-item {
    padding: 12px;
  }
}

/* Special styles for very small screens */
@media (max-width: 360px) {
  .container-header h1 {
    font-size: 1.5rem;
  }

  .task-actions {
    flex-direction: column;
  }
}